# Generated by Django 4.1.6 on 2023-12-22 10:04

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommadation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(max_length=55, verbose_name='Bino nomi')),
                ('type', models.CharField(choices=[('boys', 'boys'), ('girls', 'girls')], default='boys', max_length=10, verbose_name='Bino turi')),
            ],
            options={
                'verbose_name': 'Bino',
                'verbose_name_plural': 'Binolar',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(max_length=20, verbose_name='Qavat')),
                ('accommadation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accommadations', to='main.accommadation')),
            ],
            options={
                'verbose_name': 'Qavat',
                'verbose_name_plural': 'Qavatlar',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(max_length=20, verbose_name='Xona raqami')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='main.floor')),
            ],
            options={
                'verbose_name': 'Xona',
                'verbose_name_plural': 'Xonalar',
            },
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('bed_number', models.CharField(max_length=20, verbose_name='Joy raqami')),
                ('status', models.BooleanField(default=False)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='main.room')),
            ],
            options={
                'verbose_name': 'Joy',
                'verbose_name_plural': 'Joylar',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('student_id', models.CharField(max_length=12, unique=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='Ismi')),
                ('last_name', models.CharField(max_length=255, verbose_name='Familyasi')),
                ('middle_name', models.CharField(max_length=255, verbose_name='Otasini ismi')),
                ('passport', models.CharField(max_length=9, unique=True, validators=[main.models.validate_passport], verbose_name='Passport seriya va raqami')),
                ('faculty', models.CharField(max_length=255, verbose_name='Fakultet')),
                ('course_of_study', models.CharField(max_length=255, verbose_name="Ta'lim yo'nalishi")),
                ('stage', models.PositiveIntegerField(default=1, verbose_name='Bosqich')),
                ('group', models.CharField(max_length=20, verbose_name='Guruh')),
                ('phone', models.CharField(max_length=13, verbose_name='Telefon raqami')),
                ('email', models.EmailField(max_length=254, verbose_name='Elektron pochta manzili')),
                ('bed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.bed')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Talaba',
                'verbose_name_plural': 'Talabalar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
